---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-app
  namespace: prod
  labels:
    app: deploy-app
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: deploy-app
  template:
    metadata:
      labels:
        app: deploy-app
    spec:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        privileged: false
        runAsNonRoot: True
      containers:
      - name: conteiner-app
        image: image:v1
        resources:
          requests:
            cpu: "250m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-app
  namespace: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deploy-app
  minReplicas: 4
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: v1
kind: Service
metadata:
  name: svc-app
  namespace: prod
spec:
  selector:
    app: deploy-app
  ports:
    - port: 80
      targetPort: 80
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-app
  namespace: prod
spec:
  podSelector:
    matchLabels:
      app: your-app  # Замените на нужный лейбл подов
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: allowed-app  # Под, которому разрешен доступ

